{"version":3,"sources":["Video.js","shaders/Blur.js","shaders/ImagesPicker.js","shaders/StaticBlurMap.js","shaders/Vignette.js","shaders/TimeLoop.js","App.js","serviceWorker.js","index.js"],"names":["Video","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","_raf","raf","loop","video","refs","currentTime","props","onFrame","cancel","_this$props","rest","objectWithoutProperties","react_default","a","createElement","assign","ref","Component","NORM","Math","sqrt","shaders","Shaders","create","blurV1D","frag","GLSL","_templateObject","BlurV1D","connectSize","_ref","t","children","direction","map","width","height","lib","shader","uniforms","resolution","BlurV","_ref2","factor","passes","rec","pass","p","total","f","ceil","directionForPass","ImagePickable","onClick","onChange","src","selected","style","alt","objectSpread","borderWidth","borderColor","borderStyle","PureComponent","ImagesPicker","_this$props2","images","imageStyle","display","flexDirection","alignItems","justifyContent","flexWrap","ImagesPicker_ImagePickable","split","id","StaticBlurMap","ImagesPicker_ImagesPicker","vignetteColorSeparationDistortion","Vignette_templateObject","Vignette","C","_ref$refreshRate","length","undefined","refreshRate","TL","_PureComponent","_getPrototypeOf2","_len","args","Array","_key","call","concat","state","time","tick","startTime","lastTime","_this2","interval","_r","setState","displayName","name","hoistNonReactStatics","timeLoop","mouse","freq","sin","amp","max","cos","moving","WebCamSource","navigator","mediaDevices","getUserMedia","then","stream","URL","createObjectURL","App","_this3","updateWindowDimensions","window","innerWidth","innerHeight","blur","addEventListener","removeEventListener","_this4","_this$state","gl_react_dom_lib","margin","redraw","Video_Video","autoPlay","App_WebCamSource","vid","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.695b464f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport raf from \"raf\";\n\n// We implement a component <Video> that is like <video>\n// but provides a onFrame hook so we can efficiently only render\n// if when it effectively changes.\nexport class Video extends Component {\n  componentDidMount() {\n    const loop = () => {\n      this._raf = raf(loop);\n      const { video } = this.refs;\n      if (!video) return;\n      const currentTime = video.currentTime;\n      // Optimization that only call onFrame if time changes\n      if (currentTime !== this.currentTime) {\n        this.currentTime = currentTime;\n        this.props.onFrame(currentTime);\n      }\n    };\n    this._raf = raf(loop);\n  }\n  componentWillUnmount() {\n    raf.cancel(this._raf);\n  }\n  render() {\n    const { onFrame, ...rest } = this.props;\n    return <video {...rest} ref=\"video\" />;\n  }\n}\n","import React from \"react\";\nimport { Shaders, Node, GLSL, connectSize } from \"gl-react\";\n\n// empirical strategy to chose a 2d vector for a blur pass\nconst NORM = Math.sqrt(2) / 2;\nexport const directionForPass = (p: number, factor: number, total: number) => {\n  const f = (factor * 2 * Math.ceil(p / 2)) / total;\n  switch (\n    (p - 1) % 4 // alternate horizontal, vertical and 2 diagonals\n  ) {\n    case 0:\n      return [f, 0];\n    case 1:\n      return [0, f];\n    case 2:\n      return [f * NORM, f * NORM];\n    default:\n      return [f * NORM, -f * NORM];\n  }\n};\n\nconst shaders = Shaders.create({\n  blurV1D: {\n    frag: GLSL`precision highp float;\nvarying vec2 uv;\nuniform sampler2D t, map;\nuniform vec2 direction, resolution;\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture2D(image, uv) * 0.2270270270;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\nvoid main() {\n  gl_FragColor = blur9(t, uv, resolution, direction * texture2D(map, uv).rg);\n}`\n  }\n});\n\n// Same concept than Blur1D except it takes one more prop:\n// a map texture that tells the blur intensity for a given position.\nexport const BlurV1D = connectSize(\n  ({ children: t, direction, map, width, height }) => (\n    <Node\n      shader={shaders.blurV1D}\n      uniforms={{ t, map, resolution: [width, height], direction }}\n    />\n  )\n);\n\n// And its N-pass version\nexport const BlurV = connectSize(({ children, factor, map, passes }) => {\n  const rec = pass =>\n    pass <= 0 ? (\n      children\n    ) : (\n      <BlurV1D map={map} direction={directionForPass(pass, factor, passes)}>\n        {rec(pass - 1)}\n      </BlurV1D>\n    );\n  return rec(passes);\n});\n","import React, { PureComponent, Component } from \"react\";\n\nclass ImagePickable extends PureComponent {\n  props: {\n    style: any,\n    src: string,\n    selected: boolean,\n    onChange: (src: string) => void\n  };\n  onClick = () => this.props.onChange(this.props.src);\n  render() {\n    const { src, selected, style } = this.props;\n    return (\n      <img\n        alt=\"\"\n        src={src}\n        onClick={this.onClick}\n        style={{\n          borderWidth: 2,\n          borderColor: selected ? \"#F00\" : \"transparent\",\n          borderStyle: \"solid\",\n          ...style\n        }}\n      />\n    );\n  }\n}\n\nexport default class ImagesPicker extends Component {\n  props: {\n    imageStyle?: any,\n    style?: any,\n    value: string,\n    images: Array<string>,\n    onChange: (c: string) => any\n  };\n  render() {\n    const { value, onChange, images, style, imageStyle } = this.props;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          flexWrap: \"wrap\",\n          ...style\n        }}\n      >\n        {images.map(src => (\n          <ImagePickable\n            key={src}\n            onChange={onChange}\n            src={src}\n            selected={src === value}\n            style={imageStyle}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ImagesPicker from \"./ImagesPicker\";\n\nconst imgurify = slugs =>\n  slugs.split(\",\").map(id => \"https://i.imgur.com/\" + id + \".png\");\nconst images = imgurify(\"SzbbUvX,0PkQEk1,z2CQHpg,k9Eview,wh0On3P\");\n\nexport default class StaticBlurMap extends Component {\n  static images = images;\n\n  render() {\n    return (\n      <ImagesPicker\n        {...this.props}\n        imageStyle={{ width: 80 }}\n        images={images}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport timeLoop from \"./TimeLoop\";\n\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\nprecision highp float;\nvarying vec2 uv;\nuniform sampler2D t;\nuniform vec2 mouse;\nuniform float time, amp, freq, moving;\nvec2 lookup (vec2 offset, float amp2) {\n  return mod(\n    uv + amp2 * amp * vec2(\n      cos(freq*(uv.x+offset.x)+time),\n      sin(freq*(uv.y+offset.x)+time))\n      + vec2(\n        moving * time/10.0,\n        0.0),\n    vec2(1.0));\n}\nvoid main() {\n  float dist = distance(uv, mouse);\n  float amp2 = pow(0.5, 2.0);\n  float colorSeparation = 0.20 * mix(amp2, 1.0, 0.5);\n  vec2 orientation = vec2(1.0, 0.0);\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\n  gl_FragColor = vec4(a * vec3(\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\n    1.0);\n}`\n  }\n});\n\nexport const Vignette = timeLoop(({ children: t, time, mouse }) => (\n  <Node\n    shader={shaders.vignetteColorSeparationDistortion}\n    uniforms={{\n      t,\n      time: time / 1000, // seconds is better for float precision\n      mouse,\n      freq: 10 + 2 * Math.sin(0.000007 * time),\n      amp: 0.05 + Math.max(0, 0.03 * Math.cos(0.00001 * time)),\n      moving: 0\n    }}\n  />\n));\n","import React, { PureComponent } from \"react\";\nimport raf from \"raf\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\n// NB this is only an utility for the examples\nexport default (\n  C: ReactClass<*>,\n  { refreshRate = 60 }: { refreshRate?: number } = {}\n): ReactClass<*> => {\n  class TL extends PureComponent {\n    static displayName = `timeLoop(${C.displayName || C.name || \"\"})`;\n    state: { time: number };\n    state = {\n      time: 0,\n      tick: 0\n    };\n    _r: any;\n    componentDidMount() {\n      let startTime: number, lastTime: number;\n      let interval = 1000 / refreshRate;\n      lastTime = -interval;\n      const loop = (t: number) => {\n        this._r = raf(loop);\n        if (!startTime) startTime = t;\n        if (t - lastTime > interval) {\n          lastTime = t;\n          this.setState({\n            time: t - startTime,\n            tick: this.state.tick + 1\n          });\n        }\n      };\n      this._r = raf(loop);\n    }\n    componentWillUnmount() {\n      raf.cancel(this._r);\n    }\n    render() {\n      return <C {...this.props} {...this.state} />;\n    }\n  }\n\n  hoistNonReactStatics(TL, C);\n\n  return TL;\n};\n","import React, { Component } from \"react\";\nimport { Bus } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport { Video } from \"./Video\";\nimport { BlurV } from \"./shaders/Blur\";\nimport StaticBlurMap from \"./shaders/StaticBlurMap\";\nimport { Vignette } from \"./shaders/Vignette\";\n\n// We can give our <Video> component a <WebCamSource> to have webcam stream!\nexport class WebCamSource extends Component {\n  state = { src: null };\n  componentWillMount() {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then(stream => this.setState({ src: URL.createObjectURL(stream) }));\n  }\n  render() {\n    const { src } = this.state;\n    return src ? <source src={src} /> : null;\n  }\n}\n\nfunction convert(uri) {\n  return <img src={uri} alt=\"\" />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      blur: false,\n      factor: 7,\n      passes: 1,\n      map: StaticBlurMap.images[0]\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  render() {\n    const style = {\n      margin: \"0 auto\"\n    };\n    const { map, passes, factor } = this.state;\n    return (\n      <div>\n        <Surface width={1260} height={720} style={style}>\n          <Bus ref=\"vid\">\n            {redraw => (\n              <Video onFrame={redraw} autoPlay>\n                <WebCamSource />\n              </Video>\n            )}\n          </Bus>\n          <Vignette mouse={[0.5, 0.5]}>\n            <BlurV map={map} passes={passes} factor={factor}>\n              {() => this.refs.vid}\n            </BlurV>\n          </Vignette>\n        </Surface>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}